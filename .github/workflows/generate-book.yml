name: Generate Book

on:
  push:
    paths:
      - 'book/src/**'
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Book version'
        required: false
        default: 'SNAPSHOT'

jobs:
  build-book:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-fonts-extra
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install
          
      - name: Build TypeScript
        run: npm run build
        
      - name: Generate code images
        run: node dist/tools/ray-so-generator/convert-to-ray.js book/src
        
      - name: Generate book version
        id: version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ] && [ "${{ github.event.inputs.version }}" != "SNAPSHOT" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "VERSION=$(date +'%Y.%m.%d')-SNAPSHOT" >> $GITHUB_ENV
          fi
          
      - name: Create book metadata
        run: |
          cat > book/src/metadata.yaml << EOF
          ---
          title: "Scala and ZIO: Effect-Oriented Programming"
          author: "Riccardo Merolla"
          date: "$(date +'%B %d, %Y')"
          version: "${{ env.VERSION }}"
          rights: "Copyright Â© $(date +'%Y') Riccardo Merolla"
          language: "en-US"
          cover-image: "book/resources/cover.jpg"
          ...
          EOF
          
      - name: Compile book to PDF
        run: |
          cd book
          mkdir -p generated
          pandoc --pdf-engine=xelatex \
            --toc \
            -V documentclass=book \
            -V geometry=margin=1in \
            -o generated/scala-zio-book-${{ env.VERSION }}.pdf \
            src/metadata.yaml src/*.md
          
      - name: Compile book to EPUB
        run: |
          cd book
          mkdir -p generated
          pandoc -o generated/scala-zio-book-${{ env.VERSION }}.epub \
            --toc \
            src/metadata.yaml src/*.md
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: book-files-${{ env.VERSION }}
          path: |
            book/generated/scala-zio-book-${{ env.VERSION }}.pdf
            book/generated/scala-zio-book-${{ env.VERSION }}.epub
          
      - name: Create Release (when not SNAPSHOT)
        if: ${{ !contains(env.VERSION, 'SNAPSHOT') }}
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: Scala & ZIO Book v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            book/generated/scala-zio-book-${{ env.VERSION }}.pdf
            book/generated/scala-zio-book-${{ env.VERSION }}.epub